[
["move-to-your-own-machine.html", "Chapter 12 Moving to your own machine 12.1 Overview 12.2 Chapter learning objectives 12.3 Installing software on your own computer 12.4 Moving your files from a web-based platform to your local computer", " Chapter 12 Moving to your own machine 12.1 Overview In this chapter, you’ll gain the necessary expertise to be able to move from working on web-based platform (e.g., JupyterHub) for performing your data analysis, to installing and running the software needed for you to do this on your own computer. 12.2 Chapter learning objectives By the end of the chapter, students will be able to: install and launch a local instance of Jupyter lab that runs R download files from the course web-based platform (e.g., JupyterHub) for later use 12.3 Installing software on your own computer In this section we will provide instructions for installing the software to do the types of data analysis you learned about in this book on our own computer. Given that installation instructions can vary widely based on the computer setup we have created instructions for recent versions of three popular operating systems. The installation instructions below have been test on computers with the following specifications: runs one of the following operating systems: macOS 10.15.X (Catalina), Ubuntu 20.04, Windows 10; version 2004. can connect to networks via a wireless connection uses a 64-bit CPU uses English as the default language 12.3.1 Windows 12.3.1.1 Git As shown in the version control chapter, Git is a very useful tool for version controlling your projects, as well as sharing your work with others. To install Git on Windows go to https://git-scm.com/download/win and download the windows version of git. After the download has finished, run the installer and accept the default configuration for all pages. 12.3.1.2 JupyterLab To run Jupyter notebooks on our computers we will need to install a program similar to the one we used as our web-based platform. One such program is Jupyter lab. Jupyter lab relies on Python, and the two can be easily installed together using the miniconda Python package distribution. To install the miniconda Python package distribution we first download it the Python 3.8 64-bit version from here. After the download has finished, run the installer and accept the default configuration for all pages. After installation, open the Start Menu and search for the program called “Anaconda Prompt (miniconda3)”. When this opens you will see a prompt similar to (base) C:\\Users\\your_name. To install Jupyter lab and the Jupyter Git extension, type the following into the Anaconda Prompt and press enter: conda install -c conda-forge -y jupyterlab conda install -y nodejs=10.* pip install --upgrade jupyterlab-git jupyter lab build To test that your Jupyter lab installation is functional, you can type jupyter lab into the Anaconda Prompt and press enter. This should open a new tab in your default browser with the Jupyter lab interface. To exit out of Jupyter lab you can click File -&gt; Shutdown, or go to the terminal from which you launched JupyterLab and hold Ctrl while pressing c twice. 12.3.1.3 R and the IRkernel To have R available to you in Jupyter lab, you will need to install the R programming language and the IRkernel. To install both type the following into the Anaconda Prompt: conda install -c conda-forge r-base conda install -c conda-forge r-irkernel To improve the experience of using R in Jupyter lab, we will add an extension that allows us to setup keyboard shortcuts for inserting text. By default, it creates shortcuts for inserting two of the most common R operators: &lt;- and %&gt;%. Type the following in the Anaconda Prompt and press enter: jupyter labextension install @techrah/text-shortcuts jupyter lab build 12.3.1.4 R packages To install the packages used in this book, type the following in the Anaconda Prompt and press enter: conda install -c conda-forge -y r-cowplot \\ r-ggally \\ r-gridextra \\ r-infer \\ r-kknn \\ r-rodbc \\ r-rpostgres \\ r-rsqlite \\ r-testthat \\ r-tidymodels \\ r-tinytex \\ unixodbc 12.3.2 Mac OS 12.3.2.1 Bash Apple recently changed the Mac default shell in the Terminal to Zsh, however, programs we need work better with the Bash shell. Thus, we recomend you change the default shell in your Terminal app to Bash by opening the Terminal app (how to video) and typing: chsh -s /bin/bash You will have to quit all instances of open Terminals and then restart the Terminal for this to take effect. 12.3.2.2 Git As shown in the version control chapter, Git is a very useful tool for version controlling your projects, as well as sharing your work with others. To install Git on Mac OS open the Terminal app (how to video) and type the following command: xcode-select --install 12.3.2.3 JupyterLab To run Jupyter notebooks on our computers we will need to install a program similar to the one we used as our web-based platform. One such program is Jupyter lab. Jupyter lab relies on Python, and the two can be easily installed together using the miniconda Python package distribution. To install the miniconda Python package distribution we first download it the Python 3.8 64-bit version from here. After the download has finished, run the installer and accept the default configuration for all pages. After installation of the miniconda Python package distribution, open the terminal app to install Jupyter lab and the Jupyter Git extension by typing the following and pressing enter: conda install -c conda-forge -y jupyterlab conda install -y nodejs=10.* pip install --upgrade jupyterlab-git jupyter lab build To test that your Jupyter lab installation is functional, you can type jupyter lab into the terminal and press enter. This should open a new tab in your default browser with the Jupyter lab interface. To exit out of Jupyter lab you can click File -&gt; Shutdown, go to the terminal from which you launched JupyterLab and hold Ctrl while pressing c twice. 12.3.2.4 R and the IRkernel To have R available to you in Jupyter lab, you will need to install the R programming language and the IRkernel. To install both type the following into the Terminal: conda install -c conda-forge r-base conda install -c conda-forge r-irkernel To improve the experience of using R in Jupyter lab, we will add an extension that allows us to setup keyboard shortcuts for inserting text. By default, it creates shortcuts for inserting two of the most common R operators: &lt;- and %&gt;%. Type the following in the Terminal and press enter: jupyter labextension install @techrah/text-shortcuts jupyter lab build 12.3.2.5 R packages To install the packages used in this book, type the following in the Terminal and press enter: conda install -c conda-forge -y r-cowplot \\ r-ggally \\ r-gridextra \\ r-infer \\ r-kknn \\ r-rodbc \\ r-rpostgres \\ r-rsqlite \\ r-testthat \\ r-tidymodels \\ r-tinytex \\ unixodbc 12.3.3 Ubuntu 12.3.3.1 Git As shown in the version control chapter, Git is a very useful tool for version controlling your projects, as well as sharing your work with others. To install Git on Mac OS open the Terminal app and type the following commands: sudo apt update sudo apt install git 12.3.3.2 JupyterLab To run Jupyter notebooks on our computers we will need to install a program similar to the one we used as our web-based platform. One such program is Jupyter lab. Jupyter lab relies on Python, and the two can be easily installed together using the miniconda Python package distribution. To install the miniconda Python package distribution we first download it the Python 3.8 64-bit version from here. After the download has finished, open the Terminal and execute the following commands: bash path/to/Miniconda3-latest-Linux-x86_64.sh Note: most often this file is downloaded to the Downloads directory, and thus the command will look like this: bash Downloads/Miniconda3-latest-Linux-x86_64.sh The instructions for the installation will then appear: Press Enter. Once the licence agreement shows, you can press space scroll down, or press q to skip reading it. Type yes and press enter to accept the licence agreement. Press enter to accept the default installation location. Type yes and press enter to instruct the installer to run conda init, which makes conda available from the terminal/shell. After installation of the miniconda Python package distribution, open the terminal app to install Jupyter lab and the Jupyter Git extension by typing the following and pressing enter: conda install -c conda-forge -y jupyterlab conda install -y nodejs=10.* pip install --upgrade jupyterlab-git jupyter lab build To test that your Jupyter lab installation is functional, you can type jupyter lab into the terminal and press enter. This should open a new tab in your default browser with the Jupyter lab interface. To exit out of Jupyter lab you can click File -&gt; Shutdown, go to the terminal from which you launched JupyterLab and hold Ctrl while pressing c twice. 12.3.3.3 R and the IRkernel To have R available to you in Jupyter lab, you will need to install the R programming language and the IRkernel. To install both type the following into the Terminal: conda install -c conda-forge r-base conda install -c conda-forge r-irkernel To improve the experience of using R in Jupyter lab, we will add an extension that allows us to setup keyboard shortcuts for inserting text. By default, it creates shortcuts for inserting two of the most common R operators: &lt;- and %&gt;%. Type the following in the Terminal and press enter: jupyter labextension install @techrah/text-shortcuts jupyter lab build 12.3.3.4 R packages To install the packages used in this book, type the following in the Terminal and press enter: conda install -c conda-forge -y r-cowplot \\ r-ggally \\ r-gridextra \\ r-infer \\ r-kknn \\ r-rodbc \\ r-rpostgres \\ r-rsqlite \\ r-testthat \\ r-tidymodels \\ r-tinytex \\ unixodbc 12.4 Moving your files from a web-based platform to your local computer In the course that uses this textbook, students work on a web-based platform (e.g., a JupyterHub) to do their course work. This section is to help students save their work from this platform at the end of the course. First in JupyterHub, open a terminal by clicking terminal in the Launcher tab of the JupyterHub. Next, type the following in the terminal to create a compressed .zip folder for the course work you are interested in downloading: zip -r course_folder.zip course_folder After the compressing process is complete, right-click on course_folder.zip and click Download. You should be able to use your computer’s software to unzip the compressed folder by double-clicking on it. "]
]
